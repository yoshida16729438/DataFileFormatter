name: build and execute test on pullreq for .NET Framework console app

on:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      branch_name:
        description: 'input target branch to test'
        required: true
        type: string

env:
  test_project_name: "DataFileFormatterTest"
  solution_name: "DataFileFormatter"

defaults:
  run:
    shell: powershell

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: set branch name when the event was pullreq
      if: github.event_name == 'pull_request'
      run: |
        $branch_name = "${{ github.head_ref }}"
        echo "target_branch=${branch_name}" | Out-File -FilePath ${Env:GITHUB_ENV} -Encoding utf8 -Append

    - name: set branch name when the event was dispatch
      if: github.event_name == 'workflow_dispatch'
      run: |
        $branch_name = "${{ github.event.inputs.branch_name }}"
        echo "branch_name=${branch_name}"
        echo "target_branch=${branch_name}" | Out-File -FilePath ${Env:GITHUB_ENV} -Encoding utf8 -Append

    - name: debug print env
      run: |
        ${Env:test_project_name}
        ${Env:solution_name}
        ${Env:target_branch}

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ env.target_branch }}

    # Add MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    # Build the app and test dll
    - name: Build
      run: msbuild -t:build -restore -p:Configuration=Release ./${Env:solution_name}.sln

    # Install the .NET Core workload to use dotnet test
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Execute all unit tests in the solution
    - name: Execute unit tests
      run: dotnet test ./${Env:test_project_name}/bin/Release/${Env:test_project_name}.dll --logger trx
